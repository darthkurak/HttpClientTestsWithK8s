---
###
### Linkerd Namespace
###
---
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Controller RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["extensions", "apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list" , "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "replicationcontrollers", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["split.smi-spec.io"]
  resources: ["trafficsplits"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-controller
subjects:
- kind: ServiceAccount
  name: linkerd-controller
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-controller
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["split.smi-spec.io"]
  resources: ["trafficsplits"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
###
### Heartbeat RBAC
###
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
###
### Web RBAC
###
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-web
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
- apiGroups: [""]
  resources: ["namespaces", "configmaps"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["serviceaccounts", "pods"]
  verbs: ["list"]
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-web
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-web
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-web
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-linkerd-web-check
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings"]
  verbs: ["list"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["list"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["list"]
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
- apiGroups: ["apiregistration.k8s.io"]
  resources: ["apiservices"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-linkerd-web-check
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-web-check
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-web
  namespace: linkerd
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-web-admin
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-tap-admin
subjects:
- kind: ServiceAccount
  name: linkerd-web
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-web
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd
---
###
### Service Profile CRD
###
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: serviceprofiles.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  group: linkerd.io
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1alpha2
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: serviceprofiles
    singular: serviceprofile
    kind: ServiceProfile
    shortNames:
    - sp
---
###
### TrafficSplit CRD
### Copied from https://github.com/deislabs/smi-sdk-go/blob/cea7e1e9372304bbb6c74a3f6ca788d9eaa9cc58/crds/split.yaml
###
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: trafficsplits.split.smi-spec.io
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  group: split.smi-spec.io
  version: v1alpha1
  scope: Namespaced
  names:
    kind: TrafficSplit
    shortNames:
      - ts
    plural: trafficsplits
    singular: trafficsplit
  additionalPrinterColumns:
  - name: Service
    type: string
    description: The apex service of this split.
    JSONPath: .spec.service
---
###
### Proxy Injector RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUlOcGpsTEJJNXFpR0ZNM1FwSngzZTR3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TVRBek1EUXlNVEEwTWpSYUZ3MHlNakF6TURReU1UQTBNalJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRREt1YWM5dUtPVGxDcExVTVVLOUc0NUw0ek1FaTVBZGxxaUtlWTdxTzZKVDBMdwpIT01ZcE9uL255UFhlTXNTV01XbEV4OU5tdDZMWXd0eWJKaXdMdEJ1d2sreWV6K0RzTXA1L2xpS1k1RkhCNS9VCloxa0kreWh5QmcrbFlvQW1NdUh2WnlqM3o0ZzA2VXhnL0d0dXRTOGhRQ1ZSS0dGRUU1akN5aGxGcEJMYk9UanEKQnlGelVYV0s2d0dZQmhzZUUyNzN3Sk5vZjZ6MFBaWjJnVWlFazg3OTM2bzI4SnI2UlVqM1pzU3BrZnd1eW00RApYcnpJZEtHVWx0SFNUaGsxcUFuU1ZDcjRTVE05dFZIVS9IWWJNL2IvbjEyc2F6d1U3RVhEdWJWWEVKaFF2MFpBClBJaTlCMnZDMndNSWVyT0FMZFJvME14dDlxQTIrb0xZNzkwYjd0RWxBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNkTE5sSGpyZjdSSmpqMDA0VmNqcmR6TWNlcTJsRU5GSFAKVWlCT2FqcytMUWVadjU0WlFGL0p1ZXVxOTNIc1IxY3VGUnVWRXcxZXRYNG9QV3dCSStscWJVSFlqOGpoYnovYgpCUkh3NjNzWVdZQ0JmZHJTbncwWEdodlFILzd6YjlKMm9PSktsNmVmOVpwTjVpcUdDOTVnMElDTjlyMTRiUWZFCldNL1U3NmI4UEQ3dC9pRkphamxLQk91MmNaWW5ITU1PNzU3c0d3bUZ6cVMzaXRZams2Y2tnZnZ5Q283bVhNMlgKZFBwRGNCdVdyYldsM3FGQWMveTBUWDFxSVFydHE4VDBkR3lNYmdGZzZubkQxZlNDWEg5U1BQeUZLTkducWZkeQpPMzZmQlVWY1BWWGgvQktDRWxvSm1JOEQ1VjdZTzVRVkU5cG80NGRxZ0RtZ3gvdEJ0MkdSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeXJtblBiaWprNVFxUzFERkN2UnVPUytNekJJdVFIWmFvaW5tTzZqdWlVOUM4QnpqCkdLVHAvNThqMTNqTEVsakZwUk1mVFpyZWkyTUxjbXlZc0M3UWJzSlBzbnMvZzdES2VmNVlpbU9SUndlZjFHZFoKQ1Bzb2NnWVBwV0tBSmpMaDcyY285OCtJTk9sTVlQeHJiclV2SVVBbFVTaGhSQk9Zd3NvWlJhUVMyems0NmdjaApjMUYxaXVzQm1BWWJIaE51OThDVGFIK3M5RDJXZG9GSWhKUE8vZCtxTnZDYStrVkk5MmJFcVpIOExzcHVBMTY4CnlIU2hsSmJSMGs0Wk5hZ0owbFFxK0VrelBiVlIxUHgyR3pQMi81OWRyR3M4Rk94Rnc3bTFWeENZVUw5R1FEeUkKdlFkcnd0c0RDSHF6Z0MzVWFORE1iZmFnTnZxQzJPL2RHKzdSSlFJREFRQUJBb0lCQVFDWHBINDhoaVFlSGFQeAppSzZNUGtGQkY1ZUxnMElEeUVTTnJ5Zmdrc0kwQmcwOVRXNTJuYzNILzhPd3gxT29HcTFsaU1OT3FyMHpxTmdFCk5NV1diTDVQUzV5UUZ1OXcwOHJ4ckZlUTFWL3pzUGxXeWlQb3V1OExOQXQ2SEE5ZUE0dk1KKytXUnpCTTNBTGQKUFpRalVQYTdPWjl3Y1BNcEdEdVo0ZEU3cmJySkxsUSt6Tk52eDRnV21KMVU5Tjg0SXJuVFVJQnZKdHdpcHROagpLNTBXMk83WnFFU0pibkJMYU9tZ1orbEg4VmhjZXR6SmFRQWZTT0oyZU0xNTYwc1Rwa09DaEpWYmVxYTdtc084Ck8vais0RThOalM4MXozZmx1Vk9vNFlFTWJjNk9sTjJrU3FaQzNyR1hVdHJGY1c4ZE8vWXJ1dUVTMWVjc1NTWVQKS2tzUG9VSUJBb0dCQU5hZzBVYitMVGdSTUQyLzVLY0x2bk8yVkd6Q1didVZoREl5K2tQUElTNXJpRDJNTEpNQwp1eGErUk03ekc1TEY1QkFkQkJMMFdEVjcvSWdaZUd4MHV2TnNBcVFVSFdKaU04Q0NIRkh0TjU4MytZWjkzQ09SCk4xNG1uSDMzdHF0Wnd4OFlXOFFWOGVrWEZTOURMRzhVbjA1Ritob3dvVjh3bTNqVVhxYnhMZytsQW9HQkFQSE4KZHAybmUzQTgvN0RxcHZXSlRsTFZpenZlTXpYbXdOYU1VVUdURDM1ZWt5YzBmMFRNblJReDNiR1k1R0E0U3I1UgpjRHBHSFFJbzg1WEpwVWJvazBYWDBha2x4VFpOL2RNRnIxVy9mYkxJK21yOTRDWUhNa2lzdDNzYzlDeWVrWVNMCnYzcmlLVU5UMjMrSnBlazZ1dk55Qm4vejdVeUFmMVNRNXdJdFFnT0JBb0dBRW84WGFaOGpBOTBnb2NaTkhGQzgKcUQ3VThBNmlPY0ZGREI0eVc5aTJVdEJEbUtiZFY5ejlsb3JmWWxITlNaVEpFc2VmaVpBTmJKcUxESzIvSndtMAovTVdUT09Md1k0aUFWeDRwR3NCN2RjNGVTbzNwa2ozRlh1UFIxbWFzS2diNkExOVUyQkRadVVFZ3VOU0RMQnZKClpyaFFWeUZyWXRMT0x0V1dWYk0zTzIwQ2dZRUFrb2pWTFUxbC9PcTZlVmg2dmFuc0VUN2dGZlBlVFBmK1BRYmoKNXoxYjBsVTJFRGc4T0ZGWGovbDRSRHhIaWhnVEU2cit2QkhwV25tK3hETmpPY21RRm05bjIzM01PZENoMWRSSQpJVXJldmc0VjAranVnWjB5MTkvemdXUldoUVBEWS9QY29uZVVVZnpydENxU3BQaTJldm5LL3Bld1l3QXNLZTkyClQxZGwvZ0VDZ1lCNFk1Ukl4RGVNNVJCN1MwcHJZa0NiR3Zld2g5VFNLNXErdjZFaDYwcURwTXBhL3kvZXp6TjAKaVd2eTUxZHlYZUs4YjBpbkt4Z01ET1lzZjhJM093MEtnQ0Jxbnl0QVo5SU10TElxK1RHcnNYTE9NTThsOWJHRAprd1VUcEtvcXkzZW9oUUJVbjZDVDMrU2ducnhzRjF4ZXVQKzBRN2t3RnV2eEtBbW91ZmJ4MkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUlOcGpsTEJJNXFpR0ZNM1FwSngzZTR3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TVRBek1EUXlNVEEwTWpSYUZ3MHlNakF6TURReU1UQTBNalJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRREt1YWM5dUtPVGxDcExVTVVLOUc0NUw0ek1FaTVBZGxxaUtlWTdxTzZKVDBMdwpIT01ZcE9uL255UFhlTXNTV01XbEV4OU5tdDZMWXd0eWJKaXdMdEJ1d2sreWV6K0RzTXA1L2xpS1k1RkhCNS9VCloxa0kreWh5QmcrbFlvQW1NdUh2WnlqM3o0ZzA2VXhnL0d0dXRTOGhRQ1ZSS0dGRUU1akN5aGxGcEJMYk9UanEKQnlGelVYV0s2d0dZQmhzZUUyNzN3Sk5vZjZ6MFBaWjJnVWlFazg3OTM2bzI4SnI2UlVqM1pzU3BrZnd1eW00RApYcnpJZEtHVWx0SFNUaGsxcUFuU1ZDcjRTVE05dFZIVS9IWWJNL2IvbjEyc2F6d1U3RVhEdWJWWEVKaFF2MFpBClBJaTlCMnZDMndNSWVyT0FMZFJvME14dDlxQTIrb0xZNzkwYjd0RWxBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNkTE5sSGpyZjdSSmpqMDA0VmNqcmR6TWNlcTJsRU5GSFAKVWlCT2FqcytMUWVadjU0WlFGL0p1ZXVxOTNIc1IxY3VGUnVWRXcxZXRYNG9QV3dCSStscWJVSFlqOGpoYnovYgpCUkh3NjNzWVdZQ0JmZHJTbncwWEdodlFILzd6YjlKMm9PSktsNmVmOVpwTjVpcUdDOTVnMElDTjlyMTRiUWZFCldNL1U3NmI4UEQ3dC9pRkphamxLQk91MmNaWW5ITU1PNzU3c0d3bUZ6cVMzaXRZams2Y2tnZnZ5Q283bVhNMlgKZFBwRGNCdVdyYldsM3FGQWMveTBUWDFxSVFydHE4VDBkR3lNYmdGZzZubkQxZlNDWEg5U1BQeUZLTkducWZkeQpPMzZmQlVWY1BWWGgvQktDRWxvSm1JOEQ1VjdZTzVRVkU5cG80NGRxZ0RtZ3gvdEJ0MkdSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  sideEffects: None
---
###
### Service Profile Validator RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-sp-validator
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-sp-validator
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRYi9pTlRxY1VOcWhxVk43a1FZNzZaVEFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNVEF6TURReU1UQTBNak5hRncweU1qQXpNRFF5TVRBME1qTmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBeDJudnJQL1g3a3Fpd295N2FzNFZJaWRtd0dYRURKMzRrMS9KaFA5c3hRb1o2cmNLc3JBYgoyOWhMSXdJWXR3MDRnSEVJWjlYZjBSd2RsakFJU3llNVVBZHpXc2pSVXJrQmJxMW1oa2dubXhaei9LTytyRlZ1Cjd1RG8rVjgxaDMrTVA2Tm5QZEdNMlY3R0h5dlVOL25jMEgvMlRDdnAyeVpVM3dkYUNtb3NPK0RNZUl2OTYvSlUKOFlsT1RpNm10S1NWbEJaOWlaOFpmTTF5NjJLcjdRNWk0SGJ1aDdCT1dnYjJWNm12NXNPUjFQa3BIOUg0Zm1sLwp6Q3JOZ2x0cW5lMS9kN241bXA2Ym90TmU1cjRSbVJHRzZYSStqM3p5UzV4aFYxcVNsL1l6VkxtdFFiVkE0blMrCjJMbzA1WDVEOWVReW8rUlJPQ3oxcFBxc0NsSkYxMWpZZ3dJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUsxTjNZUzU5OHVXTnRnbDhSaFVWbjE5OWhWbzdQU0xuZ091cjBXQUYyeGcKWEgzb0RpeDhkUVhHY1A2a01PS0srVE03cEdjdEk2WjQwamN3cWYwc0k4MmpDa3J2aXhtYjROTm5VOXpDbUtrWgptS0EwUWE3MlBYV2VlWnJxQlVwaVNrbm9LYkQ1YXVYMUVTZHQzaGJ4L1laZWpTYndhT0Y1WjJsTmRmTnVwVWZRCncycE1HK3ZDQnpCRzRUOGQxZDB5YWEvdE5LRkhkemZWZzcwcWZmZElzbHZNRUlSM0VLRURDTnVadHQwQVZ2R3QKckxTbW96NHgvYVl0bUdwQWpieURVcWxPTGZNT1FMa0I4c0d5RCswZytMdEVtc2ZsQzBNK08wVnlhQXJjdStBZgo5ZnFBeExla01LT1VrRFkwTHhWZ0xtTWZjS0lOYkM3RlppcE5qZ3ovK2dNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeDJudnJQL1g3a3Fpd295N2FzNFZJaWRtd0dYRURKMzRrMS9KaFA5c3hRb1o2cmNLCnNyQWIyOWhMSXdJWXR3MDRnSEVJWjlYZjBSd2RsakFJU3llNVVBZHpXc2pSVXJrQmJxMW1oa2dubXhaei9LTysKckZWdTd1RG8rVjgxaDMrTVA2Tm5QZEdNMlY3R0h5dlVOL25jMEgvMlRDdnAyeVpVM3dkYUNtb3NPK0RNZUl2OQo2L0pVOFlsT1RpNm10S1NWbEJaOWlaOFpmTTF5NjJLcjdRNWk0SGJ1aDdCT1dnYjJWNm12NXNPUjFQa3BIOUg0CmZtbC96Q3JOZ2x0cW5lMS9kN241bXA2Ym90TmU1cjRSbVJHRzZYSStqM3p5UzV4aFYxcVNsL1l6VkxtdFFiVkEKNG5TKzJMbzA1WDVEOWVReW8rUlJPQ3oxcFBxc0NsSkYxMWpZZ3dJREFRQUJBb0lCQUdXak5mak1FY2V2bk5OaQpIV2dyajVQdjF5dzY4amlvRDNrMStpVmlkcExiT2locWtQWlFVbkswQkYvY2dySlI5N2xuWXl4aFV3bG10aUhGCmE0UzZ3M1hweGo3QVdnZzZxV002MkNXYkF5ekZ2ZXBIbnppQTl1Q2tHN3AyYjNjWGFHbExKS1RhZUZxV05vN08KclFTMnduZzJzRmRVam9ZWFBHek1kM1VWZG1ReG9mcFd1eGVMWmpjNlROZ0x2OUlYZitFM1MvNGJZQ3l4QTdpdQpMbHBnRzVpUGRLWEs2aGtxd0U0RDJWd1JmdVdmRDN0SWZlNituaG1ZZUVnbjVaS0lEM3FaNkdrMDIwcjlnUDE2CmxJd3AxM2FhY0dnNE5INFlPV2txNUNsWmFOcXFSakhUVGJ6bDYveU0xMlhhR3NHQ2MwZjdsQUM4WDU1YldGL0wKeTF0THJURUNnWUVBMWRjcEF0blgyUGhPaW5LcHBUL2tDbEZldE9CTzNMMzlpbzJydmp4VjBUZjJ2bGlDanUzUgpzR2VyekNnUzVXam1HYlk1YkhxbFZMR2p6WXVhUlRuVURURE94MHhzMVByak9ZNWhNU1AyQ05GYm5lczNxNnluCkdEb3ZkaTVmMXllU1IrYWlVZm5kMXRhMnp1a0JrMDdqWTZGSjVhZkJWNUNEaFhzMVE3WW5hS2tDZ1lFQTdycWsKUmtwa1FuVk9NMHY3NC9GN0lhc2ZlOHZVUlN6Ym1ZbGtjTmI3MUF2UllQeVRxQlBiM29WLzRocjlFM2Fvb3lucwplVHA5bFpQanllUERBcTlxaWZZWlhUN3c2WEdwemxZTFBXYUpBWTBNbG0yZktVZnByYTkweUVhQlFuS2thWENkCkZISDREa2tzdHg2YWI5MHZtVTRwMmdtOUE1R0d6WExtb1pYMkYwc0NnWUFYMTR4NEIrZmNCaHRqcmxNaDNKVEYKWGJzc2VaSHhaTEYvSURxVTFFOVJLMmMwWTlQeXNhdGVlc0NaMjZIM3VCRm5ybnlLanNZZVFrd2NIOE9Na2wwRgpOM3JtbDZ2T3QwWmNaWGFLcnhMQWV1ODNGVUc0djJCR0FEN0ljM1UySFBCZldlU2hOVFc1dldqV2V2NDArV2U2CjlRR3pQRmYvTmxxanFGQVJBNTh6T1FLQmdRQ0p3aFl0b1p2OVphZThuaW82dlF4cXYwNnBwMU5VbjdBUkIyRjQKWS9acHhIQU1ZWFByVjVwVzYvNkJ3VVVzeUJwRUhWc2lFWWlLbWc2bVg5SVdhSmM0Q1ZWVm80NXRoM09QWjhPUQpxT3lDZ3B3eTZnc2dUU2toV3RBdkNkQnBRYkp5VGRPM0NwVXoyVEgrY2FCNDBOQTR6UXdGai8wTVpCdS96b0FiCjJtZHB4UUtCZ0c5R2lKUEpuc0s3WGVZMjVCMEtoVFdqbHRncVJuMEdhM2Z6bHNGZ1NDclViL1lhKzFrK1djUkQKbWJrc0t5YUFZVGNnWmRsVTB2WldER1dBV05WZzhRZ2pxRFdySWV0Wm00WitwMFFaaG9wTCtseDE1dUFmRXA1aApxQ0YxV2luTmsxV0l0cGdLaU9KV1BjWFpwNS94ZVZ1cDBUdmNFeGVQMVZqcldXTFV1VEU0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRYi9pTlRxY1VOcWhxVk43a1FZNzZaVEFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNVEF6TURReU1UQTBNak5hRncweU1qQXpNRFF5TVRBME1qTmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBeDJudnJQL1g3a3Fpd295N2FzNFZJaWRtd0dYRURKMzRrMS9KaFA5c3hRb1o2cmNLc3JBYgoyOWhMSXdJWXR3MDRnSEVJWjlYZjBSd2RsakFJU3llNVVBZHpXc2pSVXJrQmJxMW1oa2dubXhaei9LTytyRlZ1Cjd1RG8rVjgxaDMrTVA2Tm5QZEdNMlY3R0h5dlVOL25jMEgvMlRDdnAyeVpVM3dkYUNtb3NPK0RNZUl2OTYvSlUKOFlsT1RpNm10S1NWbEJaOWlaOFpmTTF5NjJLcjdRNWk0SGJ1aDdCT1dnYjJWNm12NXNPUjFQa3BIOUg0Zm1sLwp6Q3JOZ2x0cW5lMS9kN241bXA2Ym90TmU1cjRSbVJHRzZYSStqM3p5UzV4aFYxcVNsL1l6VkxtdFFiVkE0blMrCjJMbzA1WDVEOWVReW8rUlJPQ3oxcFBxc0NsSkYxMWpZZ3dJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUsxTjNZUzU5OHVXTnRnbDhSaFVWbjE5OWhWbzdQU0xuZ091cjBXQUYyeGcKWEgzb0RpeDhkUVhHY1A2a01PS0srVE03cEdjdEk2WjQwamN3cWYwc0k4MmpDa3J2aXhtYjROTm5VOXpDbUtrWgptS0EwUWE3MlBYV2VlWnJxQlVwaVNrbm9LYkQ1YXVYMUVTZHQzaGJ4L1laZWpTYndhT0Y1WjJsTmRmTnVwVWZRCncycE1HK3ZDQnpCRzRUOGQxZDB5YWEvdE5LRkhkemZWZzcwcWZmZElzbHZNRUlSM0VLRURDTnVadHQwQVZ2R3QKckxTbW96NHgvYVl0bUdwQWpieURVcWxPTGZNT1FMa0I4c0d5RCswZytMdEVtc2ZsQzBNK08wVnlhQXJjdStBZgo5ZnFBeExla01LT1VrRFkwTHhWZ0xtTWZjS0lOYkM3RlppcE5qZ3ovK2dNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  rules:
  - operations: [ "CREATE" , "UPDATE" ]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
###
### Tap RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-tap
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["pods", "services", "replicationcontrollers", "namespaces", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list" , "get", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-tap-admin
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["tap.linkerd.io"]
  resources: ["*"]
  verbs: ["watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-tap
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-tap
subjects:
- kind: ServiceAccount
  name: linkerd-tap
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-linkerd-tap-auth-delegator
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: linkerd-tap
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-tap
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-linkerd-tap-auth-reader
  namespace: kube-system
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: linkerd-tap
  namespace: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-tap-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lSQUl6TU5obDY3MUV3UEdnNjZpOWdpd013RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDNXpkbU13SGhjTk1qRXdNekEwTWpFdwpOREl6V2hjTk1qSXdNekEwTWpFd05ESXpXakFpTVNBd0hnWURWUVFERXhkc2FXNXJaWEprTFhSaGNDNXNhVzVyClpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT0dkMmpFT2E2NWEKeTJHME5TUEpRUkhueHBmQ2wySHpmTjJDa080SjE1QURaK2xWNTJ3eEpnanRqbllVWTBnenlxY0FnY01KKzVCQwo3QndwS1VpKzhYWnV6SE9EWEpjVXdWLy9WQXRYQUdpMHBhVmxDZ3NBSiswOHNXblZOWEhpY29HZmUwdW5xSzZnClFvWUd0SXBIdnQ3U28zN3A1Y3ZTZVVieHByMFJ5MmU1ZHdtbG5pTitxVjhJU3lTakRZRXl1TWg5SWNiSFBIV1AKVnhvdS8wSXAxd0VPdUZZTWNncjc5VW93N2pSdCt6SmRNQ0RmV3FYM0dLbG55YWZEc0ZoNnpEVHVtT2hXVEZkVQp4RDVzUEQySDBJbG02d21xZjF5RmwxV1RmNEgwb3U1cTloWS9JTnJoK2lWaDVSdURMQUJLZHU0ZjdwOWFWaGlaCk02TzlsYzRraWlrQ0F3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1DSUdBMVVkRVFRYk1CbUNGMnhwYm10bApjbVF0ZEdGd0xteHBibXRsY21RdWMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFwMTZCbmJiVzFxcGI1CkMvMGJ3OVVsRUxvOVNQQkRnQlZ5M2ZLRE54Y1ptdlRwR0Rhb29yTk1Jd3gvMGRURlVLMDNJdlg3bGlnOVBTaEEKcGp0YS8xM0RZZWtPd3pYWDlDNCtiZEhqOFpVSDlJQVFYeDZpaTZCZlhsOERVcVFoMVY4Y1hxVE9mWkFCbzd5SwpiSmpJTlNFRW5lMml3eFQ3WWN3M215RG85NDF4WjJZb2J6WVV1clBkbmJRV2JDRENGMkJhWmpKa0xXU01RZjNqCm1FOFA1RmFLRXJZalhna2RldTRYM1FYazZaYTFFTDVDQlIrZFgyQm9xVjFEcFl0d0RUTk5Cc0Y4UGJ4bERsWSsKNmVPZWpSdnJ1T3RXVlBJcDEzU1pyR3BRODAvbC8zbFhrR3docElUYjY4R1AycFJpdzJmbU92SmRLM2R4Zmo3QQp1enQycFdOSgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNFozYU1RNXJybHJMWWJRMUk4bEJFZWZHbDhLWFlmTjgzWUtRN2duWGtBTm42VlhuCmJERW1DTzJPZGhSalNEUEtwd0NCd3duN2tFTHNIQ2twU0w3eGRtN01jNE5jbHhUQlgvOVVDMWNBYUxTbHBXVUsKQ3dBbjdUeXhhZFUxY2VKeWdaOTdTNmVvcnFCQ2hnYTBpa2UrM3RLamZ1bmx5OUo1UnZHbXZSSExaN2wzQ2FXZQpJMzZwWHdoTEpLTU5nVEs0eUgwaHhzYzhkWTlYR2k3L1FpblhBUTY0Vmd4eUN2djFTakR1TkczN01sMHdJTjlhCnBmY1lxV2ZKcDhPd1dIck1OTzZZNkZaTVYxVEVQbXc4UFlmUWlXYnJDYXAvWElXWFZaTi9nZlNpN21yMkZqOGcKMnVINkpXSGxHNE1zQUVwMjdoL3VuMXBXR0prem83MlZ6aVNLS1FJREFRQUJBb0lCQUZtSTQwWUVpd2N1VVBmOQpJL21IcktNR2IvRlo3K21YVHo0NHluc3N2TGNTSXZLZWZMQ2E4SlVxY1JhN0VJdGV3bFYwQmdyNHN6U1UyazV5CnAwZVBQeFBZOUpvQ3o0UEZZTmhQNDNKOG5GVHhHNnQvWlhUb0l2QXEzZDA2RjNPU2dnNmUwN2M2V2Q2ekNyTlYKaGVBNmlLeTB1dDFxeFI4Vjc3c1B1elBkRS9PZEQ3YVNDaEJHaXVSUWpVN1c5TTNjVm5SVVRXcGlEOWNPaWxLaAp6Nm12eUJZMXFhMC95UStud3NyV0c1THRZTHBTNitvejBwcThTYkRJa3NKSThvN3AzbWtSSXdnREhOY1hqWTg0CjMzRGRObTJuOS9VbHNYZzB0cWdKRXRObnZOS1A5QzlQdzVSQXRaT1lvMENRbzgybGNQRUN5VDdLeXE2QjNLQngKZWRSL3A0RUNnWUVBN2g4WE1oYTlNUjRCYUNMaEVBMUYzR2RKZGl5NHR3emFhK1FXUlNmejdVWXRjbWVXdmw4cwp4ejhWSURSY1pzaVBFSUc3QzVwZjJFU1pOQTAvd3dVaW54MjE3Kys1c3pKVFpvYzgvVGliOFZSVkN4M292bUJ3CktTU214VmRNZEM1ME1EeTV3Zi9mWWJYWDQwRWNnR3JUU2Nwbm1CNnk3S1JjWW9hSkdYVHVSSlVDZ1lFQThvNW8KVGFHb0ZTb29MZzZOSGNVRmR5K1F1dEFBajdhdUloWEZQQk54cWJybThhVktrUE01RVZyS0tXbThMeVp4T01VRgpVSTQ5WENRT2FXWkZXeGp6YUt2NW42cjh4dCtxbno1VGo0N3FZZmw1dzBsQUV3N0RvQ1crM3BUYjFrdnM4U3FyCkQ1azNRZ0tTMW9nVEFBUHV1YUxISHFnazZyMlZTNTVka1hqYVZrVUNnWUVBdTFWOFl5eWVoUkROSEljc052dXEKTlg2UXZjYnJQeDkraXhqektFOEpTV2RIZzlUWk5FWWVMVmFFb1VSd1dYQjVsUXZyQW5MZDZuLzFZNHowMTlHbgpialRxbUt3cGxVQUhld2IwUldjTzBDcC9pWEpyVTdMOUtuRXFQdUN5UmtqeG9hMTBtcHBadkQ1YWJQQWhveW5uCnRncmx1emlUblRhbGMrSFI1RlFveTQwQ2dZQVdTYXVmNW9qUldReFVIeFlzZEJ3cWRYNXhEQWZoTE1JWGM3U3AKN29kMU55MWRhdmpORk94YmdlSXRwLytZdlltTjA5ekhLQ3JQT3Fqd1dtdHBFWVBjVEdFbG9NcVZZNXdFQWZBZgpzdHdxb0lmbHYrZFpXUFAwMVVNU3BNOEdnL2VEdVkzNll2UEc1d0dqSU9IT0VJNXhGRm9Eb1NPelJqUmZ2RytRCm5IQkRtUUtCZ1FETm1LVlYvVHRUWE5MaDhremxkcW9BRzdvUStaRzF0VWRNMDJZUzIrZTVFZFJOOCtjZmFwYWMKVWM0djd3RzA0Z3JkYkg4bWJMcFEyVjJvS2c3dEtpSWNvdCtWeG5UM0syYXh5d1c4VlVKZGJMZVJRdis2NG5scQo1dHR5S090QjkvNHpWengwM0RwdTZRcGhaUjdYa0w3aUw5QzdQL3JNZUZkZTdQNVY3My94R1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.tap.linkerd.io
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd
spec:
  group: tap.linkerd.io
  version: v1alpha1
  groupPriorityMinimum: 1000
  versionPriority: 100
  service:
    name: linkerd-tap
    namespace: linkerd
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lSQUl6TU5obDY3MUV3UEdnNjZpOWdpd013RFFZSktvWklodmNOQVFFTEJRQXcKSWpFZ01CNEdBMVVFQXhNWGJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDNXpkbU13SGhjTk1qRXdNekEwTWpFdwpOREl6V2hjTk1qSXdNekEwTWpFd05ESXpXakFpTVNBd0hnWURWUVFERXhkc2FXNXJaWEprTFhSaGNDNXNhVzVyClpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT0dkMmpFT2E2NWEKeTJHME5TUEpRUkhueHBmQ2wySHpmTjJDa080SjE1QURaK2xWNTJ3eEpnanRqbllVWTBnenlxY0FnY01KKzVCQwo3QndwS1VpKzhYWnV6SE9EWEpjVXdWLy9WQXRYQUdpMHBhVmxDZ3NBSiswOHNXblZOWEhpY29HZmUwdW5xSzZnClFvWUd0SXBIdnQ3U28zN3A1Y3ZTZVVieHByMFJ5MmU1ZHdtbG5pTitxVjhJU3lTakRZRXl1TWg5SWNiSFBIV1AKVnhvdS8wSXAxd0VPdUZZTWNncjc5VW93N2pSdCt6SmRNQ0RmV3FYM0dLbG55YWZEc0ZoNnpEVHVtT2hXVEZkVQp4RDVzUEQySDBJbG02d21xZjF5RmwxV1RmNEgwb3U1cTloWS9JTnJoK2lWaDVSdURMQUJLZHU0ZjdwOWFWaGlaCk02TzlsYzRraWlrQ0F3RUFBYU5qTUdFd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1DSUdBMVVkRVFRYk1CbUNGMnhwYm10bApjbVF0ZEdGd0xteHBibXRsY21RdWMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFwMTZCbmJiVzFxcGI1CkMvMGJ3OVVsRUxvOVNQQkRnQlZ5M2ZLRE54Y1ptdlRwR0Rhb29yTk1Jd3gvMGRURlVLMDNJdlg3bGlnOVBTaEEKcGp0YS8xM0RZZWtPd3pYWDlDNCtiZEhqOFpVSDlJQVFYeDZpaTZCZlhsOERVcVFoMVY4Y1hxVE9mWkFCbzd5SwpiSmpJTlNFRW5lMml3eFQ3WWN3M215RG85NDF4WjJZb2J6WVV1clBkbmJRV2JDRENGMkJhWmpKa0xXU01RZjNqCm1FOFA1RmFLRXJZalhna2RldTRYM1FYazZaYTFFTDVDQlIrZFgyQm9xVjFEcFl0d0RUTk5Cc0Y4UGJ4bERsWSsKNmVPZWpSdnJ1T3RXVlBJcDEzU1pyR3BRODAvbC8zbFhrR3docElUYjY4R1AycFJpdzJmbU92SmRLM2R4Zmo3QQp1enQycFdOSgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
---
###
### Control Plane PSP
###
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: linkerd-linkerd-control-plane
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  allowedCapabilities:
  - NET_ADMIN
  - NET_RAW
  requiredDropCapabilities:
  - ALL
  hostNetwork: false
  hostIPC: false
  hostPID: false
  seLinux:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
    - min: 1
      max: 65535
  fsGroup:
    rule: MustRunAs
    ranges:
    - min: 1
      max: 65535
  volumes:
  - configMap
  - emptyDir
  - secret
  - projected
  - downwardAPI
  - persistentVolumeClaim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-psp
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ['policy', 'extensions']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - linkerd-linkerd-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-psp
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-psp
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-controller
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-grafana
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-prometheus
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-sp-validator
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-tap
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-web
  namespace: linkerd
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
data:
  values: |
    controllerImage: cr.l5d.io/linkerd/controller
    controllerReplicas: 1
    controllerUID: 2103
    dashboard:
      replicas: 1
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: IfNotPresent
        version: stable-2.9.4
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    global:
      cliVersion: linkerd/cli stable-2.9.4
      clusterDomain: cluster.local
      clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
      cniEnabled: false
      controlPlaneTracing: false
      controllerComponentLabel: linkerd.io/control-plane-component
      controllerImageVersion: stable-2.9.4
      controllerLogLevel: info
      controllerNamespaceLabel: linkerd.io/control-plane-ns
      createdByAnnotation: linkerd.io/created-by
      enableEndpointSlices: false
      grafanaUrl: ""
      highAvailability: false
      identityTrustAnchorsPEM: |
        -----BEGIN CERTIFICATE-----
        MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
        eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
        MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
        YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
        E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
        XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
        MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
        MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
        edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
        -----END CERTIFICATE-----
      identityTrustDomain: cluster.local
      imagePullPolicy: IfNotPresent
      imagePullSecrets: []
      linkerdNamespaceLabel: linkerd.io/is-control-plane
      linkerdVersion: stable-2.9.4
      namespace: linkerd
      podAnnotations: {}
      podLabels: {}
      prometheusUrl: ""
      proxy:
        capabilities: null
        disableIdentity: false
        disableTap: false
        enableExternalProfiles: false
        image:
          name: cr.l5d.io/linkerd/proxy
          pullPolicy: IfNotPresent
          version: stable-2.9.4
        inboundConnectTimeout: 100ms
        isGateway: false
        isIngress: false
        logFormat: plain
        logLevel: warn,linkerd=info
        opaquePorts: ""
        outboundConnectTimeout: 1000ms
        ports:
          admin: 4191
          control: 4190
          inbound: 4143
          outbound: 4140
        requireIdentityOnInboundPorts: ""
        resources:
          cpu:
            limit: ""
            request: ""
          memory:
            limit: ""
            request: ""
        saMountPath: null
        trace:
          collectorSvcAccount: default
          collectorSvcAddr: ""
        uid: 2102
        waitBeforeExitSeconds: 0
      proxyContainerName: linkerd-proxy
      proxyInit:
        capabilities: null
        closeWaitTimeoutSecs: 0
        ignoreInboundPorts: 25,443,587,3306,11211,5432
        ignoreOutboundPorts: 25,443,587,3306,11211,5432
        image:
          name: cr.l5d.io/linkerd/proxy-init
          pullPolicy: IfNotPresent
          version: v1.3.9
        resources:
          cpu:
            limit: 100m
            request: 10m
          memory:
            limit: 50Mi
            request: 10Mi
        saMountPath: null
        xtMountPath:
          mountPath: /run
          name: linkerd-proxy-init-xtables-lock
          readOnly: false
      proxyInjectAnnotation: linkerd.io/inject
      proxyInjectDisabled: disabled
      workloadNamespaceLabel: linkerd.io/workload-ns
    grafana:
      enabled: true
    heartbeatResources: null
    heartbeatSchedule: 0 0 * * *
    identity:
      issuer:
        clockSkewAllowance: 20s
        crtExpiry: "2022-03-04T21:04:33Z"
        crtExpiryAnnotation: linkerd.io/identity-issuer-expiry
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
            eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
            MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
            YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
            E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
            XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
            MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
            MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
            edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
            -----END CERTIFICATE-----
    identityProxyResources: null
    identityResources: null
    installNamespace: true
    nodeSelector:
      beta.kubernetes.io/os: linux
    omitWebhookSideEffects: false
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheus:
      enabled: true
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    publicAPIProxyResources: null
    publicAPIResources: null
    restrictDashboardPrivileges: false
    spValidatorProxyResources: null
    spValidatorResources: null
    tap:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
    tapProxyResources: null
    tapResources: null
    tolerations: null
    tracing:
      enabled: false
    webImage: cr.l5d.io/linkerd/web
    webProxyResources: null
    webResources: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
    linkerd.io/identity-issuer-expiry: 2022-03-04T21:04:33Z
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJvakNDQVVpZ0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQXBNU2N3SlFZRFZRUURFeDVwWkdWdWRHbDAKZVM1c2FXNXJaWEprTG1Oc2RYTjBaWEl1Ykc5allXd3dIaGNOTWpFd016QTBNakV3TkRFeldoY05Nakl3TXpBMApNakV3TkRNeldqQXBNU2N3SlFZRFZRUURFeDVwWkdWdWRHbDBlUzVzYVc1clpYSmtMbU5zZFhOMFpYSXViRzlqCllXd3dXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUllzSUxSbUFZTTh3Q09KRmE4YXo2d3BWdFMKRS9lSmRBNTg5a1FRTSs5eW1hbDdHRnZYVDlQMTkrd3pGemJqcStjb0Z3SHpWOXdLWWtkYVduaVZ2NXIwbzJFdwpYekFPQmdOVkhROEJBZjhFQkFNQ0FRWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIaFNQTUV0eHV3VUM2a1lvU1dpby9pcVBiSWkKTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUUwcWg0d2xUSnEreHpVanRpLy9uWnI1Z24yc3BZNjZMQmdLcHFyRwplZHlxQWlFQWkyYXBkZTlIN3ljMldNbFRTRkV2OEtORit0dmlyZUF2bVBlQlc0YVNSak09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUd3bHVwcDByYzRBL3ZUby93bm9uTXJObDlhWTBScXZWYkc2bXI4dmVHWnVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFV0xDQzBaZ0dEUE1BamlSV3ZHcytzS1ZiVWhQM2lYUU9mUFpFRURQdmNwbXBleGhiMTAvVAo5ZmZzTXhjMjQ2dm5LQmNCODFmY0NtSkhXbHA0bGIrYTlBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.4
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.9.4
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.9.4
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - identity
        - -log-level=info
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-trust-anchors-pem=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJvakNDQVVpZ0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQXBNU2N3SlFZRFZRUURFeDVwWkdWdWRHbDAKZVM1c2FXNXJaWEprTG1Oc2RYTjBaWEl1Ykc5allXd3dIaGNOTWpFd016QTBNakV3TkRFeldoY05Nakl3TXpBMApNakV3TkRNeldqQXBNU2N3SlFZRFZRUURFeDVwWkdWdWRHbDBlUzVzYVc1clpYSmtMbU5zZFhOMFpYSXViRzlqCllXd3dXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUllzSUxSbUFZTTh3Q09KRmE4YXo2d3BWdFMKRS9lSmRBNTg5a1FRTSs5eW1hbDdHRnZYVDlQMTkrd3pGemJqcStjb0Z3SHpWOXdLWWtkYVduaVZ2NXIwbzJFdwpYekFPQmdOVkhROEJBZjhFQkFNQ0FRWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIaFNQTUV0eHV3VUM2a1lvU1dpby9pcVBiSWkKTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUUwcWg0d2xUSnEreHpVanRpLy9uWnI1Z24yc3BZNjZMQmdLcHFyRwplZHlxQWlFQWkyYXBkZTlIN3ljMldNbFRTRkV2OEtORit0dmlyZUF2bVBlQlc0YVNSak09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        - -identity-scheme=linkerd.io/tls
        image: cr.l5d.io/linkerd/controller:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
             fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
            eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
            MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
            YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
            E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
            XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
            MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
            MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
            edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_TAP_SVC_NAME
          value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: cr.l5d.io/linkerd/proxy:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,25,443,587,3306,11211,5432"
        - --outbound-ports-to-ignore
        - "25,443,587,3306,11211,5432"
        image: cr.l5d.io/linkerd/proxy-init:v1.3.9
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Controller
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-controller-api
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: controller
  ports:
  - name: http
    port: 8085
    targetPort: 8085
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.4
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-controller
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: controller
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-controller
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.9.4
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.9.4
      labels:
        linkerd.io/control-plane-component: controller
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-controller
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - public-api
        - -destination-addr=linkerd-dst.linkerd.svc.cluster.local:8086
        - -controller-namespace=linkerd
        - -log-level=info
        - -cluster-domain=cluster.local
        - -prometheus-url=http://linkerd-prometheus.linkerd.svc.cluster.local:9090
        image: cr.l5d.io/linkerd/controller:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: public-api
        ports:
        - containerPort: 8085
          name: http
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
             fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
            eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
            MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
            YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
            E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
            XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
            MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
            MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
            edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_TAP_SVC_NAME
          value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: cr.l5d.io/linkerd/proxy:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,25,443,587,3306,11211,5432"
        - --outbound-ports-to-ignore
        - "25,443,587,3306,11211,5432"
        image: cr.l5d.io/linkerd/proxy-init:v1.3.9
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-controller
      volumes:
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.4
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.9.4
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.9.4
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -enable-endpoint-slices=false
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        image: cr.l5d.io/linkerd/controller:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
             fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
            eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
            MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
            YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
            E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
            XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
            MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
            MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
            edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_TAP_SVC_NAME
          value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: cr.l5d.io/linkerd/proxy:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,25,443,587,3306,11211,5432"
        - --outbound-ports-to-ignore
        - "25,443,587,3306,11211,5432"
        image: cr.l5d.io/linkerd/proxy-init:v1.3.9
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.4
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  schedule: "0 0 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.9.4
        spec:
          nodeSelector:
            beta.kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.9.4
            imagePullPolicy: IfNotPresent
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-prometheus-url=http://linkerd-prometheus.linkerd.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
---
###
### Web
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-web
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: web
  ports:
  - name: http
    port: 8084
    targetPort: 8084
  - name: admin-http
    port: 9994
    targetPort: 9994
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    app.kubernetes.io/name: web
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.4
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-web
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: web
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-web
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.9.4
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.9.4
      labels:
        linkerd.io/control-plane-component: web
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-web
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - -api-addr=linkerd-controller-api.linkerd.svc.cluster.local:8085
        - -cluster-domain=cluster.local
        - -grafana-addr=linkerd-grafana.linkerd.svc.cluster.local:3000
        - -controller-namespace=linkerd
        - -log-level=info
        - -enforced-host=^(localhost|127\.0\.0\.1|linkerd-web\.linkerd\.svc\.cluster\.local|linkerd-web\.linkerd\.svc|\[::1\])(:\d+)?$
        image: cr.l5d.io/linkerd/web:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9994
          initialDelaySeconds: 10
        name: web
        ports:
        - containerPort: 8084
          name: http
        - containerPort: 9994
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9994
        securityContext:
          runAsUser: 2103
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
             fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
            eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
            MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
            YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
            E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
            XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
            MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
            MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
            edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_TAP_SVC_NAME
          value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: cr.l5d.io/linkerd/proxy:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,25,443,587,3306,11211,5432"
        - --outbound-ports-to-ignore
        - "25,443,587,3306,11211,5432"
        image: cr.l5d.io/linkerd/proxy-init:v1.3.9
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-web
      volumes:
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Proxy Injector
###
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.4
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  template:
    metadata:
      annotations:
        checksum/config: 8acc2dd6f78c78760a2380e2a921cdc0647c94773b0caa8a1abcb414ca206777
        linkerd.io/created-by: linkerd/cli stable-2.9.4
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.9.4
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - proxy-injector
        - -log-level=info
        image: cr.l5d.io/linkerd/controller:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
             fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
            eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
            MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
            YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
            E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
            XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
            MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
            MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
            edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_TAP_SVC_NAME
          value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: cr.l5d.io/linkerd/proxy:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,25,443,587,3306,11211,5432"
        - --outbound-ports-to-ignore
        - "25,443,587,3306,11211,5432"
        image: cr.l5d.io/linkerd/proxy-init:v1.3.9
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
###
### Service Profile Validator
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: sp-validator
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    app.kubernetes.io/name: sp-validator
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.4
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-sp-validator
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: sp-validator
  template:
    metadata:
      annotations:
        checksum/config: 57e421fbbb195a20f23b515ed8d79f3719d7711d0a606c78d835508510afb94f
        linkerd.io/created-by: linkerd/cli stable-2.9.4
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.9.4
      labels:
        linkerd.io/control-plane-component: sp-validator
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-sp-validator
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - sp-validator
        - -log-level=info
        image: cr.l5d.io/linkerd/controller:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
             fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
            eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
            MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
            YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
            E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
            XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
            MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
            MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
            edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_TAP_SVC_NAME
          value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: cr.l5d.io/linkerd/proxy:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,25,443,587,3306,11211,5432"
        - --outbound-ports-to-ignore
        - "25,443,587,3306,11211,5432"
        image: cr.l5d.io/linkerd/proxy-init:v1.3.9
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-sp-validator
      volumes:
      - name: tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Tap
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-tap
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: tap
  ports:
  - name: grpc
    port: 8088
    targetPort: 8088
  - name: apiserver
    port: 443
    targetPort: apiserver
---
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    app.kubernetes.io/name: tap
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.4
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-tap
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: tap
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-tap
  template:
    metadata:
      annotations:
        checksum/config: 05a82ab438f3a3e8d38a91636a3b048b9dc8d26a2c3fd087fe79793d82de797b
        linkerd.io/created-by: linkerd/cli stable-2.9.4
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.9.4
      labels:
        linkerd.io/control-plane-component: tap
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-tap
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - tap
        - -controller-namespace=linkerd
        - -log-level=info
        - -identity-trust-domain=cluster.local
        image: cr.l5d.io/linkerd/controller:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9998
          initialDelaySeconds: 10
        name: tap
        ports:
        - containerPort: 8088
          name: grpc
        - containerPort: 8089
          name: apiserver
        - containerPort: 9998
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9998
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
             fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
            eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
            MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
            YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
            E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
            XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
            MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
            MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
            edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_TAP_SVC_NAME
          value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: cr.l5d.io/linkerd/proxy:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,25,443,587,3306,11211,5432"
        - --outbound-ports-to-ignore
        - "25,443,587,3306,11211,5432"
        image: cr.l5d.io/linkerd/proxy-init:v1.3.9
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-tap
      volumes:
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
      - name: tls
        secret:
          secretName: linkerd-tap-k8s-tls

---
###
### Grafana RBAC
###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-grafana
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd
---
###
### Grafana
###
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-grafana-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
data:
  grafana.ini: |-
    instance_name = linkerd-grafana

    [server]
    root_url = %(protocol)s://%(domain)s:/grafana/

    [auth]
    disable_login_form = true

    [auth.anonymous]
    enabled = true
    org_role = Editor

    [auth.basic]
    enabled = false

    [analytics]
    check_for_updates = false

    [panels]
    disable_sanitize_html = true

  datasources.yaml: |-
    apiVersion: 1
    datasources:
    - name: prometheus
      type: prometheus
      access: proxy
      orgId: 1
      url: http://linkerd-prometheus.linkerd.svc.cluster.local:9090
      isDefault: true
      jsonData:
        timeInterval: "5s"
      version: 1
      editable: true

  dashboards.yaml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: true
      editable: true
      options:
        path: /var/lib/grafana/dashboards
        homeDashboardId: linkerd-top-line
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-grafana
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: grafana
  ports:
  - name: http
    port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.4
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-grafana
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: grafana
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-grafana
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.9.4
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.9.4
      labels:
        linkerd.io/control-plane-component: grafana
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-grafana
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - env:
        - name: GF_PATHS_DATA
          value: /data
        # Force using the go-based DNS resolver instead of the OS' to avoid failures in some environments
        # see https://github.com/grafana/grafana/issues/20096
        - name: GODEBUG
          value: netdns=go
        image: cr.l5d.io/linkerd/grafana:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
        securityContext:
          runAsUser: 472
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /etc/grafana
          name: grafana-config
          readOnly: true
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
             fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
            eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
            MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
            YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
            E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
            XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
            MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
            MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
            edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_TAP_SVC_NAME
          value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: cr.l5d.io/linkerd/proxy:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,25,443,587,3306,11211,5432"
        - --outbound-ports-to-ignore
        - "25,443,587,3306,11211,5432"
        image: cr.l5d.io/linkerd/proxy-init:v1.3.9
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-grafana
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          items:
          - key: grafana.ini
            path: grafana.ini
          - key: datasources.yaml
            path: provisioning/datasources/datasources.yaml
          - key: dashboards.yaml
            path: provisioning/dashboards/dashboards.yaml
          name: linkerd-grafana-config
        name: grafana-config
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Prometheus RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-prometheus
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "pods"]
  verbs: ["get", "list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-prometheus
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-prometheus
subjects:
- kind: ServiceAccount
  name: linkerd-prometheus
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-prometheus
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd
---
###
### Prometheus
###
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-prometheus-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
data:
  prometheus.yml: |-
    global:
      evaluation_interval: 10s
      scrape_interval: 10s
      scrape_timeout: 10s

    rule_files:
    - /etc/prometheus/*_rules.yml
    - /etc/prometheus/*_rules.yaml

    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']

    - job_name: 'grafana'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        action: keep
        regex: ^grafana$

    #  Required for: https://grafana.com/grafana/dashboards/315
    - job_name: 'kubernetes-nodes-cadvisor'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
      metric_relabel_configs:
      - source_labels: [__name__]
        regex: '(container|machine)_(cpu|memory|network|fs)_(.+)'
        action: keep
      - source_labels: [__name__]
        regex: 'container_memory_failures_total' # unneeded large metric
        action: drop

    - job_name: 'linkerd-controller'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: (.*);admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-service-mirror'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: linkerd-service-mirror;admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-proxy'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_pod_container_port_name
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns
        action: keep
        regex: ^linkerd-proxy;linkerd-admin;linkerd$
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      # special case k8s' "job" label, to not interfere with prometheus' "job"
      # label
      # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =>
      # k8s_job=foo
      - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]
        action: replace
        target_label: k8s_job
      # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job
      # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =>
      # deployment=foo
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # drop all labels that we just made copies of in the previous labelmap
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # __meta_kubernetes_pod_label_linkerd_io_foo=bar =>
      # foo=bar
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_(.+)
      # Copy all pod labels to tmp labels
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: __tmp_pod_label_$1
      # Take `linkerd_io_` prefixed labels and copy them without the prefix
      - action: labelmap
        regex: __tmp_pod_label_linkerd_io_(.+)
        replacement:  __tmp_pod_label_$1
      # Drop the `linkerd_io_` originals
      - action: labeldrop
        regex: __tmp_pod_label_linkerd_io_(.+)
      # Copy tmp labels into real labels
      - action: labelmap
        regex: __tmp_pod_label_(.+)
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-prometheus
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: prometheus
  ports:
  - name: admin-http
    port: 9090
    targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.4
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.4
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-prometheus
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: prometheus
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-prometheus
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.9.4
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.9.4
      labels:
        linkerd.io/control-plane-component: prometheus
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-prometheus
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      securityContext:
        fsGroup: 65534
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --log.level=info
        - --storage.tsdb.path=/data
        - --storage.tsdb.retention.time=6h
        image: prom/prometheus:v2.19.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        name: prometheus
        ports:
        - containerPort: 9090
          name: admin-http
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /etc/prometheus/prometheus.yml
          name: prometheus-config
          subPath: prometheus.yml
          readOnly: true
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
             fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBojCCAUigAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
            eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMzA0MjEwNDEzWhcNMjIwMzA0
            MjEwNDMzWjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
            YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARYsILRmAYM8wCOJFa8az6wpVtS
            E/eJdA589kQQM+9ymal7GFvXT9P19+wzFzbjq+coFwHzV9wKYkdaWniVv5r0o2Ew
            XzAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
            MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHhSPMEtxuwUC6kYoSWio/iqPbIi
            MAoGCCqGSM49BAMCA0gAMEUCIE0qh4wlTJq+xzUjti//nZr5gn2spY66LBgKpqrG
            edyqAiEAi2apde9H7yc2WMlTSFEv8KNF+tvireAvmPeBW4aSRjM=
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_TAP_SVC_NAME
          value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: cr.l5d.io/linkerd/proxy:stable-2.9.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,25,443,587,3306,11211,5432"
        - --outbound-ports-to-ignore
        - "25,443,587,3306,11211,5432"
        image: cr.l5d.io/linkerd/proxy-init:v1.3.9
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-prometheus
      volumes:
      - name: data
        emptyDir: {}
      - configMap:
          name: linkerd-prometheus-config
        name: prometheus-config
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
apiVersion: v1
data:
  linkerd-config-overrides: Z2xvYmFsOgogIGlkZW50aXR5VHJ1c3RBbmNob3JzUEVNOiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSUJvakNDQVVpZ0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQXBNU2N3SlFZRFZRUURFeDVwWkdWdWRHbDAKICAgIGVTNXNhVzVyWlhKa0xtTnNkWE4wWlhJdWJHOWpZV3d3SGhjTk1qRXdNekEwTWpFd05ERXpXaGNOTWpJd016QTAKICAgIE1qRXdORE16V2pBcE1TY3dKUVlEVlFRREV4NXBaR1Z1ZEdsMGVTNXNhVzVyWlhKa0xtTnNkWE4wWlhJdWJHOWoKICAgIFlXd3dXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUllzSUxSbUFZTTh3Q09KRmE4YXo2d3BWdFMKICAgIEUvZUpkQTU4OWtRUU0rOXltYWw3R0Z2WFQ5UDE5K3d6RnpianErY29Gd0h6Vjl3S1lrZGFXbmlWdjVyMG8yRXcKICAgIFh6QU9CZ05WSFE4QkFmOEVCQU1DQVFZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKICAgIE1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIaFNQTUV0eHV3VUM2a1lvU1dpby9pcVBiSWkKICAgIE1Bb0dDQ3FHU000OUJBTUNBMGdBTUVVQ0lFMHFoNHdsVEpxK3h6VWp0aS8vblpyNWduMnNwWTY2TEJnS3BxckcKICAgIGVkeXFBaUVBaTJhcGRlOUg3eWMyV01sVFNGRXY4S05GK3R2aXJlQXZtUGVCVzRhU1JqTT0KICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KaWRlbnRpdHk6CiAgaXNzdWVyOgogICAgY3J0RXhwaXJ5OiAiMjAyMi0wMy0wNFQyMTowNDozM1oiCiAgICB0bHM6CiAgICAgIGNydFBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgICAgIE1JSUJvakNDQVVpZ0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQXBNU2N3SlFZRFZRUURFeDVwWkdWdWRHbDAKICAgICAgICBlUzVzYVc1clpYSmtMbU5zZFhOMFpYSXViRzlqWVd3d0hoY05NakV3TXpBME1qRXdOREV6V2hjTk1qSXdNekEwCiAgICAgICAgTWpFd05ETXpXakFwTVNjd0pRWURWUVFERXg1cFpHVnVkR2wwZVM1c2FXNXJaWEprTG1Oc2RYTjBaWEl1Ykc5agogICAgICAgIFlXd3dXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUllzSUxSbUFZTTh3Q09KRmE4YXo2d3BWdFMKICAgICAgICBFL2VKZEE1ODlrUVFNKzl5bWFsN0dGdlhUOVAxOSt3ekZ6YmpxK2NvRndIelY5d0tZa2RhV25pVnY1cjBvMkV3CiAgICAgICAgWHpBT0JnTlZIUThCQWY4RUJBTUNBUVl3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQwogICAgICAgIE1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIaFNQTUV0eHV3VUM2a1lvU1dpby9pcVBiSWkKICAgICAgICBNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJRTBxaDR3bFRKcSt4elVqdGkvL25acjVnbjJzcFk2NkxCZ0twcXJHCiAgICAgICAgZWR5cUFpRUFpMmFwZGU5SDd5YzJXTWxUU0ZFdjhLTkYrdHZpcmVBdm1QZUJXNGFTUmpNPQogICAgICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgICAga2V5UEVNOiB8CiAgICAgICAgLS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCiAgICAgICAgTUhjQ0FRRUVJR3dsdXBwMHJjNEEvdlRvL3dub25Nck5sOWFZMFJxdlZiRzZtcjh2ZUdadW9Bb0dDQ3FHU000OQogICAgICAgIEF3RUhvVVFEUWdBRVdMQ0MwWmdHRFBNQWppUld2R3Mrc0tWYlVoUDNpWFFPZlBaRUVEUHZjcG1wZXhoYjEwL1QKICAgICAgICA5ZmZzTXhjMjQ2dm5LQmNCODFmY0NtSkhXbHA0bGIrYTlBPT0KICAgICAgICAtLS0tLUVORCBFQyBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
